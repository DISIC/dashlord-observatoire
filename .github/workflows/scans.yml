name: DashLord scans

on:
  workflow_dispatch:
  # schedule:
  #   - cron: "0 1 * * *" # see https://crontab.guru

# allow only one concurrent scan action
concurrency:
  cancel-in-progress: true
  group: scans

jobs:
  init:
    runs-on: ubuntu-latest
    name: Prepare
    outputs:
      json: ${{ steps.init.outputs.json }}
    steps:
      - uses: actions/checkout@v2
      - id: init
        # uses: "DISIC/dashlord-observatoire/actions/grist-procedures-urls@main"
        uses: "Numericite/dashlord-observatoire/actions/grist-procedures-urls@main"
        with:
          grist_api_key: ${{ secrets.GRIST_API_KEY }}
          jdma_api_key: ${{ secrets.JDMA_TOKEN }}
          updown_api_key: ${{ secrets.UPDOWNIO_API_KEY }}
          grist_base_id: ${{ secrets.GRIST_BASE_ID }}
          grist_procedures_table_id: ${{ secrets.GRIST_TABLE_ID }}
          grist_editions_table_id: ${{ secrets.GRIST_EDITIONS_TABLE_ID }}
          output: grist-procedures_urls.json

  scans:
    runs-on: ubuntu-latest
    name: Scan
    needs: init
    continue-on-error: true
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        sites: ${{ fromJson(needs.init.outputs.json) }}
    steps:
      - uses: actions/checkout@v2

      - run: |
          mkdir scans

      - uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: DÃ©claration a11y
        continue-on-error: true
        uses: "socialgouv/dashlord-actions/declaration-a11y@feat/a11y-output-url"
        id: declaration-a11y
        with:
          url: ${{ matrix.sites.link }}
          output: scans/declaration-a11y.json

      - name: RGAA
        continue-on-error: true
        if: ${{ steps.declaration-a11y.outputs.url && steps.declaration-a11y.outputs.url != '' }}
        uses: "DISIC/dashlord-observatoire/actions/rgaa@main"
        with:
          declarationUrl: ${{ steps.declaration-a11y.outputs.url }}
          output: scans/rgaa.json

      - name: JDMA
        continue-on-error: true
        uses: "DISIC/dashlord-observatoire/actions/jdma@main"
        with:
          id: ${{ matrix.sites.jdma_id }}
          startDate: ${{ matrix.sites.startDate }}
          endDate: ${{ matrix.sites.endDate }}
          output: scans/jdma.json
          output2: scans/jdma_3months.json

      - name: UpDown
        continue-on-error: true
        uses: "DISIC/dashlord-observatoire/actions/updown@main"
        with:
          updownToken: ${{ matrix.sites.updownToken }}
          updownApiKey: ${{ secrets.UPDOWNIO_API_KEY }}
          startDate: ${{ matrix.sites.startDate }}
          endDate: ${{ matrix.sites.endDate }}
          output: scans/updown.json

      # - name: eco-index
      #   timeout-minutes: 2
      #   continue-on-error: true
      #   uses: "socialgouv/dashlord-actions/ecoindex@v1"
      #   with:
      #     url: ${{ matrix.sites.link }}
      #     output: scans/ecoindex.json

      # - name: Lighthouse scan
      #   continue-on-error: true
      #   timeout-minutes: 10
      #   uses: SocialGouv/dashlord-actions/lhci@v1
      #   with:
      #     url: ${{ matrix.sites.link }}

      # - name: Updown.io checks
      #   continue-on-error: true
      #   timeout-minutes: 10
      #   uses: "MTES-MCT/updownio-action@main"
      #   with:
      #     apiKey: ${{ secrets.UPDOWNIO_API_KEY }}
      #     url: ${{ matrix.sites.link }}
      #     output: scans/updownio.json

      - uses: DISIC/dashlord-observatoire/actions/save@main
        with:
          id: ${{ matrix.sites.id }}
          url: ${{ matrix.sites.link }}

      - uses: EndBug/add-and-commit@v7
        with:
          add: '["results"]'
          author_name: ${{ secrets.SOCIALGROOVYBOT_NAME }}
          author_email: ${{ secrets.SOCIALGROOVYBOT_EMAIL }}
          message: "update: ${{ matrix.sites.link }}"
