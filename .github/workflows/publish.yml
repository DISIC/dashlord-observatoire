name: DashLord publish Grist

on:
  workflow_dispatch:
  # workflow_run:
  #   workflows: ["DashLord scans"]
  #   types:
  #     - completed

# allow only one concurrent publish action
concurrency:
  cancel-in-progress: true
  group: scans

jobs:
  init:
    runs-on: ubuntu-latest
    name: Prepare
    outputs:
      json: ${{ steps.init.outputs.json }}
    steps:
      - uses: actions/checkout@v2
      - id: init
        # uses: "DISIC/dashlord-observatoire/actions/grist-procedures-urls@main"
        uses: "Numericite/dashlord-observatoire/actions/grist-procedures-urls@main"
        with:
          grist_api_key: ${{ secrets.GRIST_API_KEY }}
          jdma_api_key: ${{ secrets.JDMA_TOKEN }}
          updown_api_key: ${{ secrets.UPDOWNIO_API_KEY }}
          grist_base_id: ${{ secrets.GRIST_BASE_ID }}
          grist_procedures_table_id: ${{ secrets.GRIST_TABLE_ID }}
          grist_editions_table_id: ${{ secrets.GRIST_EDITIONS_TABLE_ID }}
          output: grist-procedures_urls.json

  publish:
    runs-on: ubuntu-latest
    name: Publish
    needs: init
    continue-on-error: false
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        sites: ${{ fromJson(needs.init.outputs.json) }}
    steps:
      - uses: actions/checkout@v2

      - name: Grist insert data
        continue-on-error: true
        # uses: "DISIC/dashlord-observatoire/actions/grist-insert-data@main"
        uses: "Numericite/dashlord-observatoire/actions/grist-insert-data@main"
        with:
          id: ${{ matrix.sites.grist_id }}
          grist_api_key: ${{ secrets.GRIST_API_KEY }}
          grist_base_id: ${{ secrets.GRIST_BASE_ID }}
          grist_table_name: ${{ secrets.GRIST_TABLE_ID }}
