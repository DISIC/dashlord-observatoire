name: "Get Grist procedures URLs to scan"
description: "Rapatrier les URLs des démarches via Grist pour préparer le scan"

inputs:
  grist_api_key:
    description: "Clé API Grist"
    required: true
  jdma_api_key:
    description: "Clé API JDMA"
    required: true
  updown_api_key:
    description: "Clé API Read-only UpDown"
    required: true
  grist_base_id:
    description: "Identifiant de la base Grist"
    required: true
  grist_procedures_table_id:
    description: "ID de la table Grist des démarches"
    required: true
  grist_editions_table_id:
    description: "ID de la table Grist des éditions"
    required: true
  edition_id:
    description: "ID de l'édition spécifique (optionnel - si non fourni, utilise l'édition courante basée sur la date)"
    required: false
  output:
    description: "Path to output file. defaults to grist-procedures_urls.json"
    default: "grist-procedures_urls.json"
    required: true
outputs:
  urls:
    description: "List of procedures urls separated by comma"
    value: ${{ steps.grist_urls.outputs.urls }}
  json:
    description: "List of procedures in json with ids & urls"
    value: ${{ steps.grist_urls.outputs.json }}

runs:
  using: "composite"
  steps:
    - name: Install
      shell: bash
      run: |
        cd ${{ github.action_path }}
        yarn
    - id: grist_urls
      name: Get Grist procedures URLs and IDs
      shell: bash
      run: |
        cd ${{ github.action_path }}
        JSON_PROCEDURES=$(node index ${{ inputs.grist_api_key }} ${{ inputs.jdma_api_key }} ${{ inputs.updown_api_key }} ${{ inputs.grist_base_id }} ${{ inputs.grist_procedures_table_id }} ${{ inputs.grist_editions_table_id }} "${{ inputs.edition_id }}" | tr '\n' ' ')
        echo $JSON_PROCEDURES > ${{ inputs.output }}
        echo "json=$JSON_PROCEDURES" >> $GITHUB_OUTPUT
        STRING_URLS=$(cat ${{ inputs.output }} | python3 -c "import sys, json; data = json.load(sys.stdin); print(','.join(list(map(lambda d : d['link'], data))));")
        echo "urls=$STRING_URLS" >> $GITHUB_OUTPUT
